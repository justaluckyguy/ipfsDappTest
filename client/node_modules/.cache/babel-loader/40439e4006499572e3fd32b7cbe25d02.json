{"ast":null,"code":"'use strict';\n\nconst bs58 = require('bs58');\nconst isIPFS = require('is-ipfs');\nmodule.exports = function (multihash) {\n  if (Buffer.isBuffer(multihash)) {\n    multihash = bs58.encode(multihash);\n  }\n  if (typeof multihash !== 'string') {\n    throw new Error('unexpected multihash type: ' + typeof multihash);\n  }\n  if (!isIPFS.multihash(multihash.split('/')[0])) {\n    throw new Error('not valid multihash');\n  }\n  return multihash;\n};","map":{"version":3,"names":["bs58","require","isIPFS","module","exports","multihash","Buffer","isBuffer","encode","Error","split"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/utils/clean-multihash.js"],"sourcesContent":["'use strict'\n\nconst bs58 = require('bs58')\nconst isIPFS = require('is-ipfs')\n\nmodule.exports = function (multihash) {\n  if (Buffer.isBuffer(multihash)) {\n    multihash = bs58.encode(multihash)\n  }\n  if (typeof multihash !== 'string') {\n    throw new Error('unexpected multihash type: ' + typeof multihash)\n  }\n  if (!isIPFS.multihash(multihash.split('/')[0])) {\n    throw new Error('not valid multihash')\n  }\n  return multihash\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,MAAM,GAAGD,OAAO,CAAC,SAAS,CAAC;AAEjCE,MAAM,CAACC,OAAO,GAAG,UAAUC,SAAS,EAAE;EACpC,IAAIC,MAAM,CAACC,QAAQ,CAACF,SAAS,CAAC,EAAE;IAC9BA,SAAS,GAAGL,IAAI,CAACQ,MAAM,CAACH,SAAS,CAAC;EACpC;EACA,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAII,KAAK,CAAC,6BAA6B,GAAG,OAAOJ,SAAS,CAAC;EACnE;EACA,IAAI,CAACH,MAAM,CAACG,SAAS,CAACA,SAAS,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9C,MAAM,IAAID,KAAK,CAAC,qBAAqB,CAAC;EACxC;EACA,OAAOJ,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"script"}