{"ast":null,"code":"'use strict';\n\nconst multiaddr = require('multiaddr');\nconst loadCommands = require('./utils/load-commands');\nconst getConfig = require('./utils/default-config');\nconst sendRequest = require('./utils/send-request');\nfunction IpfsAPI(hostOrMultiaddr, port, opts) {\n  const config = getConfig();\n  try {\n    const maddr = multiaddr(hostOrMultiaddr).nodeAddress();\n    config.host = maddr.address;\n    config.port = maddr.port;\n  } catch (e) {\n    if (typeof hostOrMultiaddr === 'string') {\n      config.host = hostOrMultiaddr;\n      config.port = port && typeof port !== 'object' ? port : config.port;\n    }\n  }\n  let lastIndex = arguments.length;\n  while (!opts && lastIndex-- > 0) {\n    opts = arguments[lastIndex];\n    if (opts) break;\n  }\n  Object.assign(config, opts);\n\n  // autoconfigure in browser\n  if (!config.host && typeof self !== 'undefined') {\n    const split = self.location.host.split(':');\n    config.host = split[0];\n    config.port = split[1];\n  }\n  const requestAPI = sendRequest(config);\n  const cmds = loadCommands(requestAPI, config);\n  cmds.send = requestAPI;\n  cmds.Buffer = Buffer; // Added buffer in types (this should be removed once a breaking change is release)\n\n  return cmds;\n}\nexports = module.exports = IpfsAPI;","map":{"version":3,"names":["multiaddr","require","loadCommands","getConfig","sendRequest","IpfsAPI","hostOrMultiaddr","port","opts","config","maddr","nodeAddress","host","address","e","lastIndex","arguments","length","Object","assign","self","split","location","requestAPI","cmds","send","Buffer","exports","module"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/index.js"],"sourcesContent":["'use strict'\n\nconst multiaddr = require('multiaddr')\nconst loadCommands = require('./utils/load-commands')\nconst getConfig = require('./utils/default-config')\nconst sendRequest = require('./utils/send-request')\n\nfunction IpfsAPI (hostOrMultiaddr, port, opts) {\n  const config = getConfig()\n\n  try {\n    const maddr = multiaddr(hostOrMultiaddr).nodeAddress()\n    config.host = maddr.address\n    config.port = maddr.port\n  } catch (e) {\n    if (typeof hostOrMultiaddr === 'string') {\n      config.host = hostOrMultiaddr\n      config.port = port && typeof port !== 'object' ? port : config.port\n    }\n  }\n\n  let lastIndex = arguments.length\n  while (!opts && lastIndex-- > 0) {\n    opts = arguments[lastIndex]\n    if (opts) break\n  }\n\n  Object.assign(config, opts)\n\n  // autoconfigure in browser\n  if (!config.host &&\n    typeof self !== 'undefined') {\n    const split = self.location.host.split(':')\n    config.host = split[0]\n    config.port = split[1]\n  }\n\n  const requestAPI = sendRequest(config)\n  const cmds = loadCommands(requestAPI, config)\n  cmds.send = requestAPI\n  cmds.Buffer = Buffer // Added buffer in types (this should be removed once a breaking change is release)\n\n  return cmds\n}\n\nexports = module.exports = IpfsAPI\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AACtC,MAAMC,YAAY,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACrD,MAAME,SAAS,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AACnD,MAAMG,WAAW,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAEnD,SAASI,OAAO,CAAEC,eAAe,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC7C,MAAMC,MAAM,GAAGN,SAAS,EAAE;EAE1B,IAAI;IACF,MAAMO,KAAK,GAAGV,SAAS,CAACM,eAAe,CAAC,CAACK,WAAW,EAAE;IACtDF,MAAM,CAACG,IAAI,GAAGF,KAAK,CAACG,OAAO;IAC3BJ,MAAM,CAACF,IAAI,GAAGG,KAAK,CAACH,IAAI;EAC1B,CAAC,CAAC,OAAOO,CAAC,EAAE;IACV,IAAI,OAAOR,eAAe,KAAK,QAAQ,EAAE;MACvCG,MAAM,CAACG,IAAI,GAAGN,eAAe;MAC7BG,MAAM,CAACF,IAAI,GAAGA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGE,MAAM,CAACF,IAAI;IACrE;EACF;EAEA,IAAIQ,SAAS,GAAGC,SAAS,CAACC,MAAM;EAChC,OAAO,CAACT,IAAI,IAAIO,SAAS,EAAE,GAAG,CAAC,EAAE;IAC/BP,IAAI,GAAGQ,SAAS,CAACD,SAAS,CAAC;IAC3B,IAAIP,IAAI,EAAE;EACZ;EAEAU,MAAM,CAACC,MAAM,CAACV,MAAM,EAAED,IAAI,CAAC;;EAE3B;EACA,IAAI,CAACC,MAAM,CAACG,IAAI,IACd,OAAOQ,IAAI,KAAK,WAAW,EAAE;IAC7B,MAAMC,KAAK,GAAGD,IAAI,CAACE,QAAQ,CAACV,IAAI,CAACS,KAAK,CAAC,GAAG,CAAC;IAC3CZ,MAAM,CAACG,IAAI,GAAGS,KAAK,CAAC,CAAC,CAAC;IACtBZ,MAAM,CAACF,IAAI,GAAGc,KAAK,CAAC,CAAC,CAAC;EACxB;EAEA,MAAME,UAAU,GAAGnB,WAAW,CAACK,MAAM,CAAC;EACtC,MAAMe,IAAI,GAAGtB,YAAY,CAACqB,UAAU,EAAEd,MAAM,CAAC;EAC7Ce,IAAI,CAACC,IAAI,GAAGF,UAAU;EACtBC,IAAI,CAACE,MAAM,GAAGA,MAAM,EAAC;;EAErB,OAAOF,IAAI;AACb;AAEAG,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGtB,OAAO"},"metadata":{},"sourceType":"script"}