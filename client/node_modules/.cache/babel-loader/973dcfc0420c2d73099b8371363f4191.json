{"ast":null,"code":"var _jsxFileName = \"/home/isaak/Workspace/ipfsDapp/client/src/App.jsx\";\nimport React, { Component } from 'react';\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport Web3 from \"web3\";\nimport { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Setup from \"./components/Setup\";\nimport Demo from \"./components/Demo\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Tx = require(\"ethereumjs-tx\").Transaction;\n\nconst rpcURL = \"http://localhost:7545\";\nconst web3 = new Web3(rpcURL);\nconst abi = SimpleStorageContract[\"abi\"];\nconst contractAddress = \"0x0610AA7880cE2C0E0c022DdE76CbFcEaB1A01c0D\";\nconst contract = new web3.eth.Contract(abi, contractAddress);\nconst account = \"\";\nconst privateKey = \"\";\n\nconst ipfsAPI = require(\"ipfs-api\");\n\nconst ipfs = ipfsAPI({\n  host: \"localhost\",\n  port: \"5001\",\n  protocol: \"http\"\n});\n\nlet saveDataToIPFS = reader => {\n  return new Promise(function (resolve, reject) {\n    const buffer = Buffer.from(reader.result);\n    ipfs.add(buffer).then(response => {\n      console.log(response);\n      resolve(response[0].hash);\n    }).catch(err => {\n      console.error(err);\n      reject(err);\n    });\n  });\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blockChainHash: null,\n      web3: null,\n      address: null,\n      dataHash: null,\n      isSuccess: false\n    };\n  }\n\n  componentWillMount() {\n    ipfs.swarm.peers(function (err, res) {\n      if (err) {\n        console.error(err);\n      } else {\n        console.log(res);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: \"smart contract address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: contractAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: \"upload data to IPFS: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"file\",\n          children: \"select data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          rel: \"file\",\n          id: \"file\",\n          name: \"file\",\n          mutiple: \"multiple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: 10\n        },\n        onClick: () => {\n          let file = this.refs.file.files[0];\n          let reader = new FileReader();\n          reader.readAsArrayBuffer(file);\n\n          reader.onloadend = function (e) {\n            console.log(reader);\n            saveDataToIPFS(reader).then(hash => {\n              console.log(hash);\n              this.setState({\n                dataHash: hash\n              });\n            });\n          }.bind(this);\n        },\n        children: \"begin to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [\"dataHash: \", this.state.dataHash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          web3.eth.getTransactionCount(account, (err, txCount) => {\n            const txObject = {\n              nonce: web3.utils.toHex(txCount),\n              gasLimit: web3.utils.toHex(8000000),\n              gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\n              to: contractAddress,\n              data: contract.methods.write(this.state.dataHash).encodeABI()\n            };\n            const tx = new Tx(txObject);\n            tx.sign(privateKey);\n            const serializedTx = tx.serialize();\n            const raw = \"0x\" + serializedTx.toString(\"hex\");\n            web3.eth.sendSignedTransaction(raw, (err, txHash) => {\n              console.log(\"txHash: \", txHash);\n            });\n          }).then(() => {\n            console.log(\"data hash was already write into the blockchain\");\n            this.setState({\n              isSuccess: true\n            });\n          });\n        },\n        children: \"write the data hash in the blockchain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n} //\n// function App() {\n//   return (\n//     <EthProvider>\n//       <div id=\"App\" >\n//         <div className=\"container\">\n//           <Intro />\n//           <hr />\n//           <Setup />\n//           <hr />\n//           <Demo />\n//           <hr />\n//           <Footer />\n//         </div>\n//       </div>\n//     </EthProvider>\n//   );\n// }\n\n\nexport default App;","map":{"version":3,"names":["React","Component","SimpleStorageContract","Web3","EthProvider","Intro","Setup","Demo","Footer","Tx","require","Transaction","rpcURL","web3","abi","contractAddress","contract","eth","Contract","account","privateKey","ipfsAPI","ipfs","host","port","protocol","saveDataToIPFS","reader","Promise","resolve","reject","buffer","Buffer","from","result","add","then","response","console","log","hash","catch","err","error","App","constructor","props","state","blockChainHash","address","dataHash","isSuccess","componentWillMount","swarm","peers","res","render","marginTop","file","refs","files","FileReader","readAsArrayBuffer","onloadend","e","setState","bind","getTransactionCount","txCount","txObject","nonce","utils","toHex","gasLimit","gasPrice","toWei","to","data","methods","write","encodeABI","tx","sign","serializedTx","serialize","raw","toString","sendSignedTransaction","txHash"],"sources":["/home/isaak/Workspace/ipfsDapp/client/src/App.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport Web3 from \"web3\";\n\nimport { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Setup from \"./components/Setup\";\nimport Demo from \"./components/Demo\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nvar Tx = require(\"ethereumjs-tx\").Transaction\n\nconst rpcURL = \"http://localhost:7545\";\nconst web3 = new Web3(rpcURL);\n\nconst abi = SimpleStorageContract[\"abi\"];\nconst contractAddress = \"0x0610AA7880cE2C0E0c022DdE76CbFcEaB1A01c0D\";\nconst contract = new web3.eth.Contract(abi, contractAddress);\n\nconst account = \"\";\nconst privateKey = \"\";\n\nconst ipfsAPI = require(\"ipfs-api\");\nconst ipfs = ipfsAPI({\n  host: \"localhost\",\n  port: \"5001\",\n  protocol: \"http\"\n});\n\nlet saveDataToIPFS = (reader) => {\n  return new Promise(function(resolve, reject) {\n    const buffer = Buffer.from(reader.result);\n    ipfs.add(buffer).then((response) => {\n      console.log(response);\n      resolve(response[0].hash);\n    }).catch((err) => {\n      console.error(err);\n      reject(err);\n    })\n  })\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      blockChainHash: null,\n      web3: null,\n      address: null,\n      dataHash: null,\n      isSuccess: false\n    }\n  }\n\n  componentWillMount() {\n    ipfs.swarm.peers(function(err, res) {\n      if (err) {\n        console.error(err);\n      } else {\n        console.log(res);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div style={{marginTop:10}}>smart contract address:</div>\n        <div>{contractAddress}</div>\n        <div style={{marginTop: 10}}>upload data to IPFS: </div>\n        <div>\n          <label id=\"file\">select data</label>\n          <input type=\"file\" rel=\"file\" id=\"file\" name=\"file\" mutiple=\"multiple\"/>\n        </div>\n        <button style={{marginTop: 10}} onClick={() => {\n          let file = this.refs.file.files[0];\n          let reader = new FileReader();\n          reader.readAsArrayBuffer(file);\n          reader.onloadend = function(e) {\n            console.log(reader);\n            saveDataToIPFS(reader).then((hash) => {\n              console.log(hash);\n              this.setState({dataHash: hash});\n            });\n          }.bind(this);\n\n        }}>begin to upload</button>\n\n        <div style={{marginTop:10}}>dataHash: {this.state.dataHash}</div>\n        <button onClick={() => {\n          web3.eth.getTransactionCount(account, (err, txCount) => {\n            const txObject = {\n              nonce: web3.utils.toHex(txCount),\n              gasLimit: web3.utils.toHex(8000000),\n              gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\n              to: contractAddress,\n              data: contract.methods.write(this.state.dataHash).encodeABI()\n            };\n            const tx = new Tx(txObject);\n            tx.sign(privateKey);\n\n            const serializedTx = tx.serialize();\n            const raw = \"0x\" + serializedTx.toString(\"hex\");\n\n            web3.eth.sendSignedTransaction(raw, (err, txHash) => {\n              console.log(\"txHash: \", txHash);\n            })\n          }).then(() => {\n            console.log(\"data hash was already write into the blockchain\");\n            this.setState({isSuccess: true});\n          })\n\n        }}>write the data hash in the blockchain</button>\n\n      </div>\n    );\n  }\n\n}\n\n//\n// function App() {\n//   return (\n//     <EthProvider>\n//       <div id=\"App\" >\n//         <div className=\"container\">\n//           <Intro />\n//           <hr />\n//           <Setup />\n//           <hr />\n//           <Demo />\n//           <hr />\n//           <Footer />\n//         </div>\n//       </div>\n//     </EthProvider>\n//   );\n// }\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}