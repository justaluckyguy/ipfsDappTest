{"ast":null,"code":"'use strict';\n\nconst rsa = require('./keys/rsa');\nfunction randomBytes(number) {\n  if (!number || typeof number !== 'number') {\n    throw new Error('first argument must be a Number bigger than 0');\n  }\n  return rsa.getRandomValues(new Uint8Array(number));\n}\nmodule.exports = randomBytes;","map":{"version":3,"names":["rsa","require","randomBytes","number","Error","getRandomValues","Uint8Array","module","exports"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/peer-info/node_modules/libp2p-crypto/src/random-bytes.js"],"sourcesContent":["'use strict'\n\nconst rsa = require('./keys/rsa')\n\nfunction randomBytes (number) {\n  if (!number || typeof number !== 'number') {\n    throw new Error('first argument must be a Number bigger than 0')\n  }\n\n  return rsa.getRandomValues(new Uint8Array(number))\n}\n\nmodule.exports = randomBytes\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEjC,SAASC,WAAW,CAAEC,MAAM,EAAE;EAC5B,IAAI,CAACA,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IACzC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EAEA,OAAOJ,GAAG,CAACK,eAAe,CAAC,IAAIC,UAAU,CAACH,MAAM,CAAC,CAAC;AACpD;AAEAI,MAAM,CAACC,OAAO,GAAGN,WAAW"},"metadata":{},"sourceType":"script"}