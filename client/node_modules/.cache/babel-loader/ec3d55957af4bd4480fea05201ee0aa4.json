{"ast":null,"code":"/* Node.js 6.4.0 and up has full support */\nvar hasFullSupport = function () {\n  try {\n    if (!Buffer.isEncoding('latin1')) {\n      return false;\n    }\n    var buf = Buffer.alloc ? Buffer.alloc(4) : new Buffer(4);\n    buf.fill('ab', 'ucs2');\n    return buf.toString('hex') === '61006200';\n  } catch (_) {\n    return false;\n  }\n}();\nfunction isSingleByte(val) {\n  return val.length === 1 && val.charCodeAt(0) < 256;\n}\nfunction fillWithNumber(buffer, val, start, end) {\n  if (start < 0 || end > buffer.length) {\n    throw new RangeError('Out of range index');\n  }\n  start = start >>> 0;\n  end = end === undefined ? buffer.length : end >>> 0;\n  if (end > start) {\n    buffer.fill(val, start, end);\n  }\n  return buffer;\n}\nfunction fillWithBuffer(buffer, val, start, end) {\n  if (start < 0 || end > buffer.length) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return buffer;\n  }\n  start = start >>> 0;\n  end = end === undefined ? buffer.length : end >>> 0;\n  var pos = start;\n  var len = val.length;\n  while (pos <= end - len) {\n    val.copy(buffer, pos);\n    pos += len;\n  }\n  if (pos !== end) {\n    val.copy(buffer, pos, 0, end - pos);\n  }\n  return buffer;\n}\nfunction fill(buffer, val, start, end, encoding) {\n  if (hasFullSupport) {\n    return buffer.fill(val, start, end, encoding);\n  }\n  if (typeof val === 'number') {\n    return fillWithNumber(buffer, val, start, end);\n  }\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = buffer.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = buffer.length;\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (encoding === 'latin1') {\n      encoding = 'binary';\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n    if (val === '') {\n      return fillWithNumber(buffer, 0, start, end);\n    }\n    if (isSingleByte(val)) {\n      return fillWithNumber(buffer, val.charCodeAt(0), start, end);\n    }\n    val = new Buffer(val, encoding);\n  }\n  if (Buffer.isBuffer(val)) {\n    return fillWithBuffer(buffer, val, start, end);\n  }\n\n  // Other values (e.g. undefined, boolean, object) results in zero-fill\n  return fillWithNumber(buffer, 0, start, end);\n}\nmodule.exports = fill;","map":{"version":3,"names":["hasFullSupport","Buffer","isEncoding","buf","alloc","fill","toString","_","isSingleByte","val","length","charCodeAt","fillWithNumber","buffer","start","end","RangeError","undefined","fillWithBuffer","pos","len","copy","encoding","TypeError","isBuffer","module","exports"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/buffer-fill/index.js"],"sourcesContent":["/* Node.js 6.4.0 and up has full support */\nvar hasFullSupport = (function () {\n  try {\n    if (!Buffer.isEncoding('latin1')) {\n      return false\n    }\n\n    var buf = Buffer.alloc ? Buffer.alloc(4) : new Buffer(4)\n\n    buf.fill('ab', 'ucs2')\n\n    return (buf.toString('hex') === '61006200')\n  } catch (_) {\n    return false\n  }\n}())\n\nfunction isSingleByte (val) {\n  return (val.length === 1 && val.charCodeAt(0) < 256)\n}\n\nfunction fillWithNumber (buffer, val, start, end) {\n  if (start < 0 || end > buffer.length) {\n    throw new RangeError('Out of range index')\n  }\n\n  start = start >>> 0\n  end = end === undefined ? buffer.length : end >>> 0\n\n  if (end > start) {\n    buffer.fill(val, start, end)\n  }\n\n  return buffer\n}\n\nfunction fillWithBuffer (buffer, val, start, end) {\n  if (start < 0 || end > buffer.length) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return buffer\n  }\n\n  start = start >>> 0\n  end = end === undefined ? buffer.length : end >>> 0\n\n  var pos = start\n  var len = val.length\n  while (pos <= (end - len)) {\n    val.copy(buffer, pos)\n    pos += len\n  }\n\n  if (pos !== end) {\n    val.copy(buffer, pos, 0, end - pos)\n  }\n\n  return buffer\n}\n\nfunction fill (buffer, val, start, end, encoding) {\n  if (hasFullSupport) {\n    return buffer.fill(val, start, end, encoding)\n  }\n\n  if (typeof val === 'number') {\n    return fillWithNumber(buffer, val, start, end)\n  }\n\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = buffer.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = buffer.length\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n\n    if (encoding === 'latin1') {\n      encoding = 'binary'\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n\n    if (val === '') {\n      return fillWithNumber(buffer, 0, start, end)\n    }\n\n    if (isSingleByte(val)) {\n      return fillWithNumber(buffer, val.charCodeAt(0), start, end)\n    }\n\n    val = new Buffer(val, encoding)\n  }\n\n  if (Buffer.isBuffer(val)) {\n    return fillWithBuffer(buffer, val, start, end)\n  }\n\n  // Other values (e.g. undefined, boolean, object) results in zero-fill\n  return fillWithNumber(buffer, 0, start, end)\n}\n\nmodule.exports = fill\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}