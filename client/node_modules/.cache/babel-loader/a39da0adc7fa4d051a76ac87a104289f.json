{"ast":null,"code":"'use strict';\n\nvar common = require('../common.js');\nvar v6 = require('./constants.js');\n\n/**\n * Returns true if the address is valid, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isValid = function () {\n  return this.valid;\n};\n\n/**\n * Returns true if the given address is in the subnet of the current address\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isInSubnet = common.isInSubnet;\n\n/**\n * Returns true if the address is correct, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isCorrect = common.isCorrect(v6.BITS);\n\n/**\n * Returns true if the address is in the canonical form, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isCanonical = common.falseIfInvalid(function () {\n  return this.addressMinusSuffix === this.canonicalForm();\n});\n\n/**\n * Returns true if the address is a link local address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isLinkLocal = common.falseIfInvalid(function () {\n  // Zeroes are required, i.e. we can't check isInSubnet with 'fe80::/10'\n  if (this.getBitsBase2(0, 64) === '1111111010000000000000000000000000000000000000000000000000000000') {\n    return true;\n  }\n  return false;\n});\n\n/**\n * Returns true if the address is a multicast address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isMulticast = common.falseIfInvalid(function () {\n  return this.getType() === 'Multicast';\n});\n\n/**\n * Returns true if the address is a v4-in-v6 address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.is4 = common.falseIfInvalid(function () {\n  return this.v4;\n});\n\n/**\n * Returns true if the address is a Teredo address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isTeredo = common.falseIfInvalid(function () {\n  return this.isInSubnet(new this.constructor('2001::/32'));\n});\n\n/**\n * Returns true if the address is a 6to4 address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.is6to4 = common.falseIfInvalid(function () {\n  return this.isInSubnet(new this.constructor('2002::/16'));\n});\n\n/**\n * Returns true if the address is a loopback address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isLoopback = common.falseIfInvalid(function () {\n  return this.getType() === 'Loopback';\n});","map":{"version":3,"names":["common","require","v6","exports","isValid","valid","isInSubnet","isCorrect","BITS","isCanonical","falseIfInvalid","addressMinusSuffix","canonicalForm","isLinkLocal","getBitsBase2","isMulticast","getType","is4","v4","isTeredo","constructor","is6to4","isLoopback"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ip-address/lib/v6/attributes.js"],"sourcesContent":["'use strict';\n\nvar common = require('../common.js');\nvar v6 = require('./constants.js');\n\n/**\n * Returns true if the address is valid, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isValid = function () {\n  return this.valid;\n};\n\n/**\n * Returns true if the given address is in the subnet of the current address\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isInSubnet = common.isInSubnet;\n\n/**\n * Returns true if the address is correct, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isCorrect = common.isCorrect(v6.BITS);\n\n/**\n * Returns true if the address is in the canonical form, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isCanonical = common.falseIfInvalid(function () {\n  return this.addressMinusSuffix === this.canonicalForm();\n});\n\n/**\n * Returns true if the address is a link local address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isLinkLocal = common.falseIfInvalid(function () {\n  // Zeroes are required, i.e. we can't check isInSubnet with 'fe80::/10'\n  if (this.getBitsBase2(0, 64) ===\n    '1111111010000000000000000000000000000000000000000000000000000000') {\n    return true;\n  }\n\n  return false;\n});\n\n/**\n * Returns true if the address is a multicast address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isMulticast = common.falseIfInvalid(function () {\n  return this.getType() === 'Multicast';\n});\n\n/**\n * Returns true if the address is a v4-in-v6 address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.is4 = common.falseIfInvalid(function () {\n  return this.v4;\n});\n\n/**\n * Returns true if the address is a Teredo address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isTeredo = common.falseIfInvalid(function () {\n  return this.isInSubnet(new this.constructor('2001::/32'));\n});\n\n/**\n * Returns true if the address is a 6to4 address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.is6to4 = common.falseIfInvalid(function () {\n  return this.isInSubnet(new this.constructor('2002::/16'));\n});\n\n/**\n * Returns true if the address is a loopback address, false otherwise\n * @memberof Address6\n * @instance\n * @returns {boolean}\n */\nexports.isLoopback = common.falseIfInvalid(function () {\n  return this.getType() === 'Loopback';\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIC,EAAE,GAAGD,OAAO,CAAC,gBAAgB,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACAE,OAAO,CAACC,OAAO,GAAG,YAAY;EAC5B,OAAO,IAAI,CAACC,KAAK;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAF,OAAO,CAACG,UAAU,GAAGN,MAAM,CAACM,UAAU;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACAH,OAAO,CAACI,SAAS,GAAGP,MAAM,CAACO,SAAS,CAACL,EAAE,CAACM,IAAI,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACAL,OAAO,CAACM,WAAW,GAAGT,MAAM,CAACU,cAAc,CAAC,YAAY;EACtD,OAAO,IAAI,CAACC,kBAAkB,KAAK,IAAI,CAACC,aAAa,EAAE;AACzD,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAT,OAAO,CAACU,WAAW,GAAGb,MAAM,CAACU,cAAc,CAAC,YAAY;EACtD;EACA,IAAI,IAAI,CAACI,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,KAC1B,kEAAkE,EAAE;IACpE,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAX,OAAO,CAACY,WAAW,GAAGf,MAAM,CAACU,cAAc,CAAC,YAAY;EACtD,OAAO,IAAI,CAACM,OAAO,EAAE,KAAK,WAAW;AACvC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAb,OAAO,CAACc,GAAG,GAAGjB,MAAM,CAACU,cAAc,CAAC,YAAY;EAC9C,OAAO,IAAI,CAACQ,EAAE;AAChB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAf,OAAO,CAACgB,QAAQ,GAAGnB,MAAM,CAACU,cAAc,CAAC,YAAY;EACnD,OAAO,IAAI,CAACJ,UAAU,CAAC,IAAI,IAAI,CAACc,WAAW,CAAC,WAAW,CAAC,CAAC;AAC3D,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAjB,OAAO,CAACkB,MAAM,GAAGrB,MAAM,CAACU,cAAc,CAAC,YAAY;EACjD,OAAO,IAAI,CAACJ,UAAU,CAAC,IAAI,IAAI,CAACc,WAAW,CAAC,WAAW,CAAC,CAAC;AAC3D,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAjB,OAAO,CAACmB,UAAU,GAAGtB,MAAM,CAACU,cAAc,CAAC,YAAY;EACrD,OAAO,IAAI,CAACM,OAAO,EAAE,KAAK,UAAU;AACtC,CAAC,CAAC"},"metadata":{},"sourceType":"script"}