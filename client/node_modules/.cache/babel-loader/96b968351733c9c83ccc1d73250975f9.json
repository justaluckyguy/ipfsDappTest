{"ast":null,"code":"/* global self */\n\n'use strict';\n\nconst nodeify = require('nodeify');\nconst webCrypto = getWebCrypto();\nfunction getWebCrypto() {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle;\n  }\n  if (self.msCrypto) {\n    return self.msCrypto.subtle;\n  }\n}\nfunction webCryptoHash(type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support');\n  }\n  return (data, callback) => {\n    const res = webCrypto.digest({\n      name: type\n    }, data);\n    if (typeof res.then !== 'function') {\n      // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`));\n      };\n      res.oncomplete = e => {\n        callback(null, e.target.result);\n      };\n      return;\n    }\n    nodeify(res.then(raw => Buffer.from(new Uint8Array(raw))), callback);\n  };\n}\nfunction sha1(buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback);\n}\nfunction sha2256(buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback);\n}\nfunction sha2512(buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback);\n}\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n};","map":{"version":3,"names":["nodeify","require","webCrypto","getWebCrypto","self","crypto","subtle","webkitSubtle","msCrypto","webCryptoHash","type","Error","data","callback","res","digest","name","then","onerror","oncomplete","e","target","result","raw","Buffer","from","Uint8Array","sha1","buf","sha2256","sha2512","module","exports"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/peer-info/node_modules/multihashing-async/src/crypto-sha1-2-browser.js"],"sourcesContent":["/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n"],"mappings":"AAAA;;AAEA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAElC,MAAMC,SAAS,GAAGC,YAAY,EAAE;AAEhC,SAASA,YAAY,GAAI;EACvB,IAAIC,IAAI,CAACC,MAAM,EAAE;IACf,OAAOD,IAAI,CAACC,MAAM,CAACC,MAAM,IAAIF,IAAI,CAACC,MAAM,CAACE,YAAY;EACvD;EAEA,IAAIH,IAAI,CAACI,QAAQ,EAAE;IACjB,OAAOJ,IAAI,CAACI,QAAQ,CAACF,MAAM;EAC7B;AACF;AAEA,SAASG,aAAa,CAAEC,IAAI,EAAE;EAC5B,IAAI,CAACR,SAAS,EAAE;IACd,MAAM,IAAIS,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,OAAO,CAACC,IAAI,EAAEC,QAAQ,KAAK;IACzB,MAAMC,GAAG,GAAGZ,SAAS,CAACa,MAAM,CAAC;MAAEC,IAAI,EAAEN;IAAK,CAAC,EAAEE,IAAI,CAAC;IAElD,IAAI,OAAOE,GAAG,CAACG,IAAI,KAAK,UAAU,EAAE;MAAE;MACpCH,GAAG,CAACI,OAAO,GAAG,MAAM;QAClBL,QAAQ,CAAC,IAAIF,KAAK,CAAE,sBAAqBD,IAAK,EAAC,CAAC,CAAC;MACnD,CAAC;MACDI,GAAG,CAACK,UAAU,GAAIC,CAAC,IAAK;QACtBP,QAAQ,CAAC,IAAI,EAAEO,CAAC,CAACC,MAAM,CAACC,MAAM,CAAC;MACjC,CAAC;MACD;IACF;IAEAtB,OAAO,CACLc,GAAG,CAACG,IAAI,CAAEM,GAAG,IAAKC,MAAM,CAACC,IAAI,CAAC,IAAIC,UAAU,CAACH,GAAG,CAAC,CAAC,CAAC,EACnDV,QAAQ,CACT;EACH,CAAC;AACH;AAEA,SAASc,IAAI,CAAEC,GAAG,EAAEf,QAAQ,EAAE;EAC5BJ,aAAa,CAAC,OAAO,CAAC,CAACmB,GAAG,EAAEf,QAAQ,CAAC;AACvC;AAEA,SAASgB,OAAO,CAAED,GAAG,EAAEf,QAAQ,EAAE;EAC/BJ,aAAa,CAAC,SAAS,CAAC,CAACmB,GAAG,EAAEf,QAAQ,CAAC;AACzC;AAEA,SAASiB,OAAO,CAAEF,GAAG,EAAEf,QAAQ,EAAE;EAC/BJ,aAAa,CAAC,SAAS,CAAC,CAACmB,GAAG,EAAEf,QAAQ,CAAC;AACzC;AAEAkB,MAAM,CAACC,OAAO,GAAG;EACfL,IAAI,EAAEA,IAAI;EACVE,OAAO,EAAEA,OAAO;EAChBC,OAAO,EAAEA;AACX,CAAC"},"metadata":{},"sourceType":"script"}