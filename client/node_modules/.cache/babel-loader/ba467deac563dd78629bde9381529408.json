{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\nconst assert = require('assert');\nconst withIs = require('class-is');\n\n// Link represents an IPFS Merkle DAG Link between Nodes.\nclass DAGLink {\n  constructor(name, size, multihash) {\n    assert(multihash, 'A link requires a multihash to point to');\n    // assert(size, 'A link requires a size')\n    //  note - links should include size, but this assert is disabled\n    //  for now to maintain consistency with go-ipfs pinset\n\n    this._name = name || '';\n    this._size = size;\n    this._cid = new CID(multihash);\n  }\n  toString() {\n    return `DAGLink <${this._cid.toBaseEncodedString()} - name: \"${this.name}\", size: ${this.size}>`;\n  }\n  toJSON() {\n    if (!this._json) {\n      this._json = Object.freeze({\n        name: this.name,\n        size: this.size,\n        multihash: this._cid.toBaseEncodedString()\n      });\n    }\n    return Object.assign({}, this._json);\n  }\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    throw new Error(\"Can't set property: 'name' is immutable\");\n  }\n  get size() {\n    return this._size;\n  }\n  set size(size) {\n    throw new Error(\"Can't set property: 'size' is immutable\");\n  }\n  get multihash() {\n    return this._cid.buffer;\n  }\n  set multihash(multihash) {\n    throw new Error(\"Can't set property: 'multihash' is immutable\");\n  }\n  get cid() {\n    return this._cid;\n  }\n  set cid(cid) {\n    throw new Error(\"Can't set property: 'cid' is immutable\");\n  }\n}\nexports = module.exports = withIs(DAGLink, {\n  className: 'DAGLink',\n  symbolName: '@ipld/js-ipld-dag-pb/daglink'\n});\nexports.create = require('./create');\nexports.util = require('./util');","map":{"version":3,"names":["CID","require","assert","withIs","DAGLink","constructor","name","size","multihash","_name","_size","_cid","toString","toBaseEncodedString","toJSON","_json","Object","freeze","assign","Error","buffer","cid","exports","module","className","symbolName","create","util"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipld-dag-pb/src/dag-link/index.js"],"sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst assert = require('assert')\nconst withIs = require('class-is')\n\n// Link represents an IPFS Merkle DAG Link between Nodes.\nclass DAGLink {\n  constructor (name, size, multihash) {\n    assert(multihash, 'A link requires a multihash to point to')\n    // assert(size, 'A link requires a size')\n    //  note - links should include size, but this assert is disabled\n    //  for now to maintain consistency with go-ipfs pinset\n\n    this._name = name || ''\n    this._size = size\n    this._cid = new CID(multihash)\n  }\n\n  toString () {\n    return `DAGLink <${this._cid.toBaseEncodedString()} - name: \"${this.name}\", size: ${this.size}>`\n  }\n\n  toJSON () {\n    if (!this._json) {\n      this._json = Object.freeze({\n        name: this.name,\n        size: this.size,\n        multihash: this._cid.toBaseEncodedString()\n      })\n    }\n\n    return Object.assign({}, this._json)\n  }\n\n  get name () {\n    return this._name\n  }\n\n  set name (name) {\n    throw new Error(\"Can't set property: 'name' is immutable\")\n  }\n\n  get size () {\n    return this._size\n  }\n\n  set size (size) {\n    throw new Error(\"Can't set property: 'size' is immutable\")\n  }\n\n  get multihash () {\n    return this._cid.buffer\n  }\n\n  set multihash (multihash) {\n    throw new Error(\"Can't set property: 'multihash' is immutable\")\n  }\n\n  get cid () {\n    return this._cid\n  }\n\n  set cid (cid) {\n    throw new Error(\"Can't set property: 'cid' is immutable\")\n  }\n}\n\nexports = module.exports = withIs(DAGLink, { className: 'DAGLink', symbolName: '@ipld/js-ipld-dag-pb/daglink' })\nexports.create = require('./create')\nexports.util = require('./util')\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC3B,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;;AAElC;AACA,MAAMG,OAAO,CAAC;EACZC,WAAW,CAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAE;IAClCN,MAAM,CAACM,SAAS,EAAE,yCAAyC,CAAC;IAC5D;IACA;IACA;;IAEA,IAAI,CAACC,KAAK,GAAGH,IAAI,IAAI,EAAE;IACvB,IAAI,CAACI,KAAK,GAAGH,IAAI;IACjB,IAAI,CAACI,IAAI,GAAG,IAAIX,GAAG,CAACQ,SAAS,CAAC;EAChC;EAEAI,QAAQ,GAAI;IACV,OAAQ,YAAW,IAAI,CAACD,IAAI,CAACE,mBAAmB,EAAG,aAAY,IAAI,CAACP,IAAK,YAAW,IAAI,CAACC,IAAK,GAAE;EAClG;EAEAO,MAAM,GAAI;IACR,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE;MACf,IAAI,CAACA,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC;QACzBX,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,SAAS,EAAE,IAAI,CAACG,IAAI,CAACE,mBAAmB;MAC1C,CAAC,CAAC;IACJ;IAEA,OAAOG,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACH,KAAK,CAAC;EACtC;EAEA,IAAIT,IAAI,GAAI;IACV,OAAO,IAAI,CAACG,KAAK;EACnB;EAEA,IAAIH,IAAI,CAAEA,IAAI,EAAE;IACd,MAAM,IAAIa,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA,IAAIZ,IAAI,GAAI;IACV,OAAO,IAAI,CAACG,KAAK;EACnB;EAEA,IAAIH,IAAI,CAAEA,IAAI,EAAE;IACd,MAAM,IAAIY,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA,IAAIX,SAAS,GAAI;IACf,OAAO,IAAI,CAACG,IAAI,CAACS,MAAM;EACzB;EAEA,IAAIZ,SAAS,CAAEA,SAAS,EAAE;IACxB,MAAM,IAAIW,KAAK,CAAC,8CAA8C,CAAC;EACjE;EAEA,IAAIE,GAAG,GAAI;IACT,OAAO,IAAI,CAACV,IAAI;EAClB;EAEA,IAAIU,GAAG,CAAEA,GAAG,EAAE;IACZ,MAAM,IAAIF,KAAK,CAAC,wCAAwC,CAAC;EAC3D;AACF;AAEAG,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGnB,MAAM,CAACC,OAAO,EAAE;EAAEoB,SAAS,EAAE,SAAS;EAAEC,UAAU,EAAE;AAA+B,CAAC,CAAC;AAChHH,OAAO,CAACI,MAAM,GAAGzB,OAAO,CAAC,UAAU,CAAC;AACpCqB,OAAO,CAACK,IAAI,GAAG1B,OAAO,CAAC,QAAQ,CAAC"},"metadata":{},"sourceType":"script"}