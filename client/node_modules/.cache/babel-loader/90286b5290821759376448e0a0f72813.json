{"ast":null,"code":"function allocUnsafe(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  }\n  if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n  if (Buffer.allocUnsafe) {\n    return Buffer.allocUnsafe(size);\n  } else {\n    return new Buffer(size);\n  }\n}\nmodule.exports = allocUnsafe;","map":{"version":3,"names":["allocUnsafe","size","TypeError","RangeError","Buffer","module","exports"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/buffer-alloc-unsafe/index.js"],"sourcesContent":["function allocUnsafe (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n\n  if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n\n  if (Buffer.allocUnsafe) {\n    return Buffer.allocUnsafe(size)\n  } else {\n    return new Buffer(size)\n  }\n}\n\nmodule.exports = allocUnsafe\n"],"mappings":"AAAA,SAASA,WAAW,CAAEC,IAAI,EAAE;EAC1B,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIC,SAAS,CAAC,kCAAkC,CAAC;EACzD;EAEA,IAAID,IAAI,GAAG,CAAC,EAAE;IACZ,MAAM,IAAIE,UAAU,CAAC,sCAAsC,CAAC;EAC9D;EAEA,IAAIC,MAAM,CAACJ,WAAW,EAAE;IACtB,OAAOI,MAAM,CAACJ,WAAW,CAACC,IAAI,CAAC;EACjC,CAAC,MAAM;IACL,OAAO,IAAIG,MAAM,CAACH,IAAI,CAAC;EACzB;AACF;AAEAI,MAAM,CAACC,OAAO,GAAGN,WAAW"},"metadata":{},"sourceType":"script"}