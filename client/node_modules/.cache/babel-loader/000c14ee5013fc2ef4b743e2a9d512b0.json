{"ast":null,"code":"'use strict';\n\nconst cleanCID = require('../utils/clean-cid');\nconst TarStreamToObjects = require('../utils/tar-stream-to-objects');\nconst v = require('is-ipfs');\nconst through = require('through2');\nconst pull = require('pull-stream');\nconst toPull = require('stream-to-pull-stream');\nconst deferred = require('pull-defer');\nmodule.exports = send => {\n  return (path, opts) => {\n    opts = opts || {};\n    const p = deferred.source();\n    try {\n      path = cleanCID(path);\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return p.end(err);\n      }\n    }\n    const request = {\n      path: 'get',\n      args: path,\n      qs: opts\n    };\n\n    // Convert the response stream to TarStream objects\n    send.andTransform(request, TarStreamToObjects, (err, stream) => {\n      if (err) {\n        return p.end(err);\n      }\n      const files = [];\n      stream.pipe(through.obj((file, enc, next) => {\n        if (file.content) {\n          files.push({\n            path: file.path,\n            content: toPull(file.content)\n          });\n        } else {\n          files.push(file);\n        }\n        next();\n      }, () => p.resolve(pull.values(files))));\n    });\n    return p;\n  };\n};","map":{"version":3,"names":["cleanCID","require","TarStreamToObjects","v","through","pull","toPull","deferred","module","exports","send","path","opts","p","source","err","ipfsPath","end","request","args","qs","andTransform","stream","files","pipe","obj","file","enc","next","content","push","resolve","values"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/files/get-pull-stream.js"],"sourcesContent":["'use strict'\n\nconst cleanCID = require('../utils/clean-cid')\nconst TarStreamToObjects = require('../utils/tar-stream-to-objects')\nconst v = require('is-ipfs')\nconst through = require('through2')\nconst pull = require('pull-stream')\nconst toPull = require('stream-to-pull-stream')\nconst deferred = require('pull-defer')\n\nmodule.exports = (send) => {\n  return (path, opts) => {\n    opts = opts || {}\n\n    const p = deferred.source()\n\n    try {\n      path = cleanCID(path)\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return p.end(err)\n      }\n    }\n\n    const request = { path: 'get', args: path, qs: opts }\n\n    // Convert the response stream to TarStream objects\n    send.andTransform(request, TarStreamToObjects, (err, stream) => {\n      if (err) { return p.end(err) }\n\n      const files = []\n      stream.pipe(through.obj((file, enc, next) => {\n        if (file.content) {\n          files.push({ path: file.path, content: toPull(file.content) })\n        } else {\n          files.push(file)\n        }\n        next()\n      }, () => p.resolve(pull.values(files))))\n    })\n\n    return p\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AACpE,MAAME,CAAC,GAAGF,OAAO,CAAC,SAAS,CAAC;AAC5B,MAAMG,OAAO,GAAGH,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,aAAa,CAAC;AACnC,MAAMK,MAAM,GAAGL,OAAO,CAAC,uBAAuB,CAAC;AAC/C,MAAMM,QAAQ,GAAGN,OAAO,CAAC,YAAY,CAAC;AAEtCO,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAO,CAACC,IAAI,EAAEC,IAAI,KAAK;IACrBA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IAEjB,MAAMC,CAAC,GAAGN,QAAQ,CAACO,MAAM,EAAE;IAE3B,IAAI;MACFH,IAAI,GAAGX,QAAQ,CAACW,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,IAAI,CAACZ,CAAC,CAACa,QAAQ,CAACL,IAAI,CAAC,EAAE;QACrB,OAAOE,CAAC,CAACI,GAAG,CAACF,GAAG,CAAC;MACnB;IACF;IAEA,MAAMG,OAAO,GAAG;MAAEP,IAAI,EAAE,KAAK;MAAEQ,IAAI,EAAER,IAAI;MAAES,EAAE,EAAER;IAAK,CAAC;;IAErD;IACAF,IAAI,CAACW,YAAY,CAACH,OAAO,EAAEhB,kBAAkB,EAAE,CAACa,GAAG,EAAEO,MAAM,KAAK;MAC9D,IAAIP,GAAG,EAAE;QAAE,OAAOF,CAAC,CAACI,GAAG,CAACF,GAAG,CAAC;MAAC;MAE7B,MAAMQ,KAAK,GAAG,EAAE;MAChBD,MAAM,CAACE,IAAI,CAACpB,OAAO,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,EAAEC,IAAI,KAAK;QAC3C,IAAIF,IAAI,CAACG,OAAO,EAAE;UAChBN,KAAK,CAACO,IAAI,CAAC;YAAEnB,IAAI,EAAEe,IAAI,CAACf,IAAI;YAAEkB,OAAO,EAAEvB,MAAM,CAACoB,IAAI,CAACG,OAAO;UAAE,CAAC,CAAC;QAChE,CAAC,MAAM;UACLN,KAAK,CAACO,IAAI,CAACJ,IAAI,CAAC;QAClB;QACAE,IAAI,EAAE;MACR,CAAC,EAAE,MAAMf,CAAC,CAACkB,OAAO,CAAC1B,IAAI,CAAC2B,MAAM,CAACT,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;IAEF,OAAOV,CAAC;EACV,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}