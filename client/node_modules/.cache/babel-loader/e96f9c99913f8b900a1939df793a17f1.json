{"ast":null,"code":"'use strict';\n\nconst dagNodeUtil = require('./util');\nconst cloneLinks = dagNodeUtil.cloneLinks;\nconst cloneData = dagNodeUtil.cloneData;\nconst toDAGLink = dagNodeUtil.toDAGLink;\nconst DAGLink = require('../dag-link');\nconst DAGNode = require('./index');\nconst create = require('./create');\nfunction addLink(node, link, callback) {\n  const links = cloneLinks(node);\n  const data = cloneData(node);\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n  } else if (DAGNode.isDAGNode(link)) {\n    // It's a DAGNode instance\n    // convert to link\n    link = toDAGLink(link);\n  } else {\n    // It's a Object with name, multihash/link and size\n    try {\n      link = new DAGLink(link.name, link.size, link.multihash || link.hash);\n    } catch (err) {\n      return callback(err);\n    }\n  }\n  links.push(link);\n  create(data, links, callback);\n}\nmodule.exports = addLink;","map":{"version":3,"names":["dagNodeUtil","require","cloneLinks","cloneData","toDAGLink","DAGLink","DAGNode","create","addLink","node","link","callback","links","data","isDAGLink","isDAGNode","name","size","multihash","hash","err","push","module","exports"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipld-dag-pb/src/dag-node/addLink.js"],"sourcesContent":["'use strict'\n\nconst dagNodeUtil = require('./util')\nconst cloneLinks = dagNodeUtil.cloneLinks\nconst cloneData = dagNodeUtil.cloneData\nconst toDAGLink = dagNodeUtil.toDAGLink\nconst DAGLink = require('../dag-link')\nconst DAGNode = require('./index')\nconst create = require('./create')\n\nfunction addLink (node, link, callback) {\n  const links = cloneLinks(node)\n  const data = cloneData(node)\n\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n  } else if (DAGNode.isDAGNode(link)) {\n    // It's a DAGNode instance\n    // convert to link\n    link = toDAGLink(link)\n  } else {\n    // It's a Object with name, multihash/link and size\n    try {\n      link = new DAGLink(link.name, link.size, link.multihash || link.hash)\n    } catch (err) {\n      return callback(err)\n    }\n  }\n\n  links.push(link)\n  create(data, links, callback)\n}\n\nmodule.exports = addLink\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACrC,MAAMC,UAAU,GAAGF,WAAW,CAACE,UAAU;AACzC,MAAMC,SAAS,GAAGH,WAAW,CAACG,SAAS;AACvC,MAAMC,SAAS,GAAGJ,WAAW,CAACI,SAAS;AACvC,MAAMC,OAAO,GAAGJ,OAAO,CAAC,aAAa,CAAC;AACtC,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMM,MAAM,GAAGN,OAAO,CAAC,UAAU,CAAC;AAElC,SAASO,OAAO,CAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EACtC,MAAMC,KAAK,GAAGV,UAAU,CAACO,IAAI,CAAC;EAC9B,MAAMI,IAAI,GAAGV,SAAS,CAACM,IAAI,CAAC;EAE5B,IAAIJ,OAAO,CAACS,SAAS,CAACJ,IAAI,CAAC,EAAE;IAC3B;IACA;EAAA,CACD,MAAM,IAAIJ,OAAO,CAACS,SAAS,CAACL,IAAI,CAAC,EAAE;IAClC;IACA;IACAA,IAAI,GAAGN,SAAS,CAACM,IAAI,CAAC;EACxB,CAAC,MAAM;IACL;IACA,IAAI;MACFA,IAAI,GAAG,IAAIL,OAAO,CAACK,IAAI,CAACM,IAAI,EAAEN,IAAI,CAACO,IAAI,EAAEP,IAAI,CAACQ,SAAS,IAAIR,IAAI,CAACS,IAAI,CAAC;IACvE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAOT,QAAQ,CAACS,GAAG,CAAC;IACtB;EACF;EAEAR,KAAK,CAACS,IAAI,CAACX,IAAI,CAAC;EAChBH,MAAM,CAACM,IAAI,EAAED,KAAK,EAAED,QAAQ,CAAC;AAC/B;AAEAW,MAAM,CAACC,OAAO,GAAGf,OAAO"},"metadata":{},"sourceType":"script"}