{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst cleanMultihash = require('../utils/clean-multihash');\nmodule.exports = send => {\n  return promisify((multihash, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    if (!opts) {\n      opts = {};\n    }\n    try {\n      multihash = cleanMultihash(multihash, opts);\n    } catch (err) {\n      return callback(err);\n    }\n    send({\n      path: 'object/stat',\n      args: multihash\n    }, callback);\n  });\n};","map":{"version":3,"names":["promisify","require","cleanMultihash","module","exports","send","multihash","opts","callback","err","path","args"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/object/stat.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst cleanMultihash = require('../utils/clean-multihash')\n\nmodule.exports = (send) => {\n  return promisify((multihash, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts\n      opts = {}\n    }\n    if (!opts) {\n      opts = {}\n    }\n\n    try {\n      multihash = cleanMultihash(multihash, opts)\n    } catch (err) {\n      return callback(err)\n    }\n\n    send({\n      path: 'object/stat',\n      args: multihash\n    }, callback)\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,cAAc,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAE1DE,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAOL,SAAS,CAAC,CAACM,SAAS,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IAC9C,IAAI,OAAOD,IAAI,KAAK,UAAU,EAAE;MAC9BC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IACA,IAAI,CAACA,IAAI,EAAE;MACTA,IAAI,GAAG,CAAC,CAAC;IACX;IAEA,IAAI;MACFD,SAAS,GAAGJ,cAAc,CAACI,SAAS,EAAEC,IAAI,CAAC;IAC7C,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ,OAAOD,QAAQ,CAACC,GAAG,CAAC;IACtB;IAEAJ,IAAI,CAAC;MACHK,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAEL;IACR,CAAC,EAAEE,QAAQ,CAAC;EACd,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}