{"ast":null,"code":"'use strict';\n\nconst toPull = require('stream-to-pull-stream');\nconst pull = require('pull-stream');\nconst transformChunk = require('./bw-util');\nconst deferred = require('pull-defer');\nmodule.exports = send => {\n  return opts => {\n    opts = opts || {};\n    const p = deferred.source();\n    send({\n      path: 'stats/bw',\n      qs: opts\n    }, (err, stream) => {\n      if (err) {\n        return p.end(err);\n      }\n      p.resolve(pull(toPull.source(stream), pull.map(transformChunk)));\n    });\n    return p;\n  };\n};","map":{"version":3,"names":["toPull","require","pull","transformChunk","deferred","module","exports","send","opts","p","source","path","qs","err","stream","end","resolve","map"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/stats/bw-pull-stream.js"],"sourcesContent":["'use strict'\n\nconst toPull = require('stream-to-pull-stream')\nconst pull = require('pull-stream')\nconst transformChunk = require('./bw-util')\nconst deferred = require('pull-defer')\n\nmodule.exports = (send) => {\n  return (opts) => {\n    opts = opts || {}\n\n    const p = deferred.source()\n\n    send({\n      path: 'stats/bw',\n      qs: opts\n    }, (err, stream) => {\n      if (err) {\n        return p.end(err)\n      }\n\n      p.resolve(pull(\n        toPull.source(stream),\n        pull.map(transformChunk)\n      ))\n    })\n\n    return p\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC/C,MAAMC,IAAI,GAAGD,OAAO,CAAC,aAAa,CAAC;AACnC,MAAME,cAAc,GAAGF,OAAO,CAAC,WAAW,CAAC;AAC3C,MAAMG,QAAQ,GAAGH,OAAO,CAAC,YAAY,CAAC;AAEtCI,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAQC,IAAI,IAAK;IACfA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IAEjB,MAAMC,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAE;IAE3BH,IAAI,CAAC;MACHI,IAAI,EAAE,UAAU;MAChBC,EAAE,EAAEJ;IACN,CAAC,EAAE,CAACK,GAAG,EAAEC,MAAM,KAAK;MAClB,IAAID,GAAG,EAAE;QACP,OAAOJ,CAAC,CAACM,GAAG,CAACF,GAAG,CAAC;MACnB;MAEAJ,CAAC,CAACO,OAAO,CAACd,IAAI,CACZF,MAAM,CAACU,MAAM,CAACI,MAAM,CAAC,EACrBZ,IAAI,CAACe,GAAG,CAACd,cAAc,CAAC,CACzB,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOM,CAAC;EACV,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}