{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst once = require('once');\nconst cleanMultihash = require('../utils/clean-multihash');\nconst SendOneFile = require('../utils/send-one-file');\nmodule.exports = send => {\n  const objectGet = require('./get')(send);\n  const sendOneFile = SendOneFile(send, 'object/patch/append-data');\n  return promisify((multihash, data, opts, _callback) => {\n    if (typeof opts === 'function') {\n      _callback = opts;\n      opts = {};\n    }\n    const callback = once(_callback);\n    if (!opts) {\n      opts = {};\n    }\n    try {\n      multihash = cleanMultihash(multihash, opts);\n    } catch (err) {\n      return callback(err);\n    }\n    sendOneFile(data, {\n      args: [multihash]\n    }, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n      objectGet(result.Hash, {\n        enc: 'base58'\n      }, callback);\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","once","cleanMultihash","SendOneFile","module","exports","send","objectGet","sendOneFile","multihash","data","opts","_callback","callback","err","args","result","Hash","enc"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/object/appendData.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst once = require('once')\nconst cleanMultihash = require('../utils/clean-multihash')\nconst SendOneFile = require('../utils/send-one-file')\n\nmodule.exports = (send) => {\n  const objectGet = require('./get')(send)\n  const sendOneFile = SendOneFile(send, 'object/patch/append-data')\n\n  return promisify((multihash, data, opts, _callback) => {\n    if (typeof opts === 'function') {\n      _callback = opts\n      opts = {}\n    }\n    const callback = once(_callback)\n    if (!opts) {\n      opts = {}\n    }\n\n    try {\n      multihash = cleanMultihash(multihash, opts)\n    } catch (err) {\n      return callback(err)\n    }\n\n    sendOneFile(data, { args: [multihash] }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n\n      objectGet(result.Hash, { enc: 'base58' }, callback)\n    })\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,cAAc,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAC1D,MAAMG,WAAW,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AAErDI,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,MAAMC,SAAS,GAAGP,OAAO,CAAC,OAAO,CAAC,CAACM,IAAI,CAAC;EACxC,MAAME,WAAW,GAAGL,WAAW,CAACG,IAAI,EAAE,0BAA0B,CAAC;EAEjE,OAAOP,SAAS,CAAC,CAACU,SAAS,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,KAAK;IACrD,IAAI,OAAOD,IAAI,KAAK,UAAU,EAAE;MAC9BC,SAAS,GAAGD,IAAI;MAChBA,IAAI,GAAG,CAAC,CAAC;IACX;IACA,MAAME,QAAQ,GAAGZ,IAAI,CAACW,SAAS,CAAC;IAChC,IAAI,CAACD,IAAI,EAAE;MACTA,IAAI,GAAG,CAAC,CAAC;IACX;IAEA,IAAI;MACFF,SAAS,GAAGP,cAAc,CAACO,SAAS,EAAEE,IAAI,CAAC;IAC7C,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,OAAOD,QAAQ,CAACC,GAAG,CAAC;IACtB;IAEAN,WAAW,CAACE,IAAI,EAAE;MAAEK,IAAI,EAAE,CAACN,SAAS;IAAE,CAAC,EAAE,CAACK,GAAG,EAAEE,MAAM,KAAK;MACxD,IAAIF,GAAG,EAAE;QACP,OAAOD,QAAQ,CAACC,GAAG,CAAC;MACtB;MAEAP,SAAS,CAACS,MAAM,CAACC,IAAI,EAAE;QAAEC,GAAG,EAAE;MAAS,CAAC,EAAEL,QAAQ,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}