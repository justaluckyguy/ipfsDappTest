{"ast":null,"code":"'use strict';\n\nfunction requireCommands() {\n  const cmds = {\n    // Files (not MFS)\n    add: require('../files/add'),\n    addReadableStream: require('../files/add-readable-stream'),\n    addPullStream: require('../files/add-pull-stream'),\n    cat: require('../files/cat'),\n    catReadableStream: require('../files/cat-readable-stream'),\n    catPullStream: require('../files/cat-pull-stream'),\n    get: require('../files/get'),\n    getReadableStream: require('../files/get-readable-stream'),\n    getPullStream: require('../files/get-pull-stream'),\n    ls: require('../ls'),\n    lsReadableStream: require('../ls-readable-stream'),\n    lsPullStream: require('../ls-pull-stream'),\n    bitswap: require('../bitswap'),\n    block: require('../block'),\n    bootstrap: require('../bootstrap'),\n    commands: require('../commands'),\n    config: require('../config'),\n    dag: require('../dag'),\n    dht: require('../dht'),\n    diag: require('../diag'),\n    id: require('../id'),\n    key: require('../key'),\n    log: require('../log'),\n    mount: require('../mount'),\n    name: require('../name'),\n    object: require('../object'),\n    pin: require('../pin'),\n    ping: require('../ping'),\n    pingReadableStream: require('../ping-readable-stream'),\n    pingPullStream: require('../ping-pull-stream'),\n    refs: require('../refs'),\n    repo: require('../repo'),\n    stop: require('../stop'),\n    stats: require('../stats'),\n    swarm: require('../swarm'),\n    pubsub: require('../pubsub'),\n    update: require('../update'),\n    version: require('../version'),\n    types: require('../types'),\n    resolve: require('../resolve'),\n    dns: require('../dns')\n  };\n\n  // shutdown is an alias for stop\n  cmds.shutdown = cmds.stop;\n\n  // TODO: crowding the 'files' namespace temporarily for interface-ipfs-core\n  // compatibility, until 'files vs mfs' naming decision is resolved.\n  cmds.files = function (send) {\n    const files = require('../files')(send);\n    return files;\n  };\n  cmds.util = function (send, config) {\n    const util = {\n      addFromFs: require('../util/fs-add')(send),\n      addFromStream: require('../files/add')(send),\n      addFromURL: require('../util/url-add')(send),\n      getEndpointConfig: require('../util/get-endpoint-config')(config),\n      crypto: require('libp2p-crypto'),\n      isIPFS: require('is-ipfs')\n    };\n    return util;\n  };\n  return cmds;\n}\nfunction loadCommands(send, config) {\n  const files = requireCommands();\n  const cmds = {};\n  Object.keys(files).forEach(file => {\n    cmds[file] = files[file](send, config);\n  });\n  return cmds;\n}\nmodule.exports = loadCommands;","map":{"version":3,"names":["requireCommands","cmds","add","require","addReadableStream","addPullStream","cat","catReadableStream","catPullStream","get","getReadableStream","getPullStream","ls","lsReadableStream","lsPullStream","bitswap","block","bootstrap","commands","config","dag","dht","diag","id","key","log","mount","name","object","pin","ping","pingReadableStream","pingPullStream","refs","repo","stop","stats","swarm","pubsub","update","version","types","resolve","dns","shutdown","files","send","util","addFromFs","addFromStream","addFromURL","getEndpointConfig","crypto","isIPFS","loadCommands","Object","keys","forEach","file","module","exports"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/utils/load-commands.js"],"sourcesContent":["'use strict'\n\nfunction requireCommands () {\n  const cmds = {\n    // Files (not MFS)\n    add: require('../files/add'),\n    addReadableStream: require('../files/add-readable-stream'),\n    addPullStream: require('../files/add-pull-stream'),\n    cat: require('../files/cat'),\n    catReadableStream: require('../files/cat-readable-stream'),\n    catPullStream: require('../files/cat-pull-stream'),\n    get: require('../files/get'),\n    getReadableStream: require('../files/get-readable-stream'),\n    getPullStream: require('../files/get-pull-stream'),\n    ls: require('../ls'),\n    lsReadableStream: require('../ls-readable-stream'),\n    lsPullStream: require('../ls-pull-stream'),\n\n    bitswap: require('../bitswap'),\n    block: require('../block'),\n    bootstrap: require('../bootstrap'),\n    commands: require('../commands'),\n    config: require('../config'),\n    dag: require('../dag'),\n    dht: require('../dht'),\n    diag: require('../diag'),\n    id: require('../id'),\n    key: require('../key'),\n    log: require('../log'),\n    mount: require('../mount'),\n    name: require('../name'),\n    object: require('../object'),\n    pin: require('../pin'),\n    ping: require('../ping'),\n    pingReadableStream: require('../ping-readable-stream'),\n    pingPullStream: require('../ping-pull-stream'),\n    refs: require('../refs'),\n    repo: require('../repo'),\n    stop: require('../stop'),\n    stats: require('../stats'),\n    swarm: require('../swarm'),\n    pubsub: require('../pubsub'),\n    update: require('../update'),\n    version: require('../version'),\n    types: require('../types'),\n    resolve: require('../resolve'),\n    dns: require('../dns')\n  }\n\n  // shutdown is an alias for stop\n  cmds.shutdown = cmds.stop\n\n  // TODO: crowding the 'files' namespace temporarily for interface-ipfs-core\n  // compatibility, until 'files vs mfs' naming decision is resolved.\n  cmds.files = function (send) {\n    const files = require('../files')(send)\n\n    return files\n  }\n\n  cmds.util = function (send, config) {\n    const util = {\n      addFromFs: require('../util/fs-add')(send),\n      addFromStream: require('../files/add')(send),\n      addFromURL: require('../util/url-add')(send),\n      getEndpointConfig: require('../util/get-endpoint-config')(config),\n      crypto: require('libp2p-crypto'),\n      isIPFS: require('is-ipfs')\n    }\n    return util\n  }\n\n  return cmds\n}\n\nfunction loadCommands (send, config) {\n  const files = requireCommands()\n  const cmds = {}\n\n  Object.keys(files).forEach((file) => {\n    cmds[file] = files[file](send, config)\n  })\n\n  return cmds\n}\n\nmodule.exports = loadCommands\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}