{"ast":null,"code":"'use strict';\n\nconst bs58 = require('bs58');\nconst CID = require('cids');\nmodule.exports = function (cid) {\n  if (Buffer.isBuffer(cid)) {\n    cid = bs58.encode(cid);\n  }\n  if (CID.isCID(cid)) {\n    cid = cid.toBaseEncodedString();\n  }\n  if (typeof cid !== 'string') {\n    throw new Error('unexpected cid type: ' + typeof cid);\n  }\n  CID.validateCID(new CID(cid.split('/')[0]));\n  return cid;\n};","map":{"version":3,"names":["bs58","require","CID","module","exports","cid","Buffer","isBuffer","encode","isCID","toBaseEncodedString","Error","validateCID","split"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/utils/clean-cid.js"],"sourcesContent":["'use strict'\n\nconst bs58 = require('bs58')\nconst CID = require('cids')\n\nmodule.exports = function (cid) {\n  if (Buffer.isBuffer(cid)) {\n    cid = bs58.encode(cid)\n  }\n  if (CID.isCID(cid)) {\n    cid = cid.toBaseEncodedString()\n  }\n  if (typeof cid !== 'string') {\n    throw new Error('unexpected cid type: ' + typeof cid)\n  }\n  CID.validateCID(new CID(cid.split('/')[0]))\n  return cid\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE3BE,MAAM,CAACC,OAAO,GAAG,UAAUC,GAAG,EAAE;EAC9B,IAAIC,MAAM,CAACC,QAAQ,CAACF,GAAG,CAAC,EAAE;IACxBA,GAAG,GAAGL,IAAI,CAACQ,MAAM,CAACH,GAAG,CAAC;EACxB;EACA,IAAIH,GAAG,CAACO,KAAK,CAACJ,GAAG,CAAC,EAAE;IAClBA,GAAG,GAAGA,GAAG,CAACK,mBAAmB,EAAE;EACjC;EACA,IAAI,OAAOL,GAAG,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIM,KAAK,CAAC,uBAAuB,GAAG,OAAON,GAAG,CAAC;EACvD;EACAH,GAAG,CAACU,WAAW,CAAC,IAAIV,GAAG,CAACG,GAAG,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,OAAOR,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"script"}