{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst multiaddr = require('multiaddr');\nconst PeerId = require('peer-id');\nmodule.exports = send => {\n  return promisify((opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    const verbose = opts.v || opts.verbose;\n    send({\n      path: 'swarm/peers',\n      qs: opts\n    }, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n\n      // go-ipfs <= 0.4.4\n      if (result.Strings) {\n        return callback(null, result.Strings.map(p => {\n          const res = {};\n          if (verbose) {\n            const parts = p.split(' ');\n            res.addr = multiaddr(parts[0]);\n            res.latency = parts[1];\n          } else {\n            res.addr = multiaddr(p);\n          }\n          res.peer = PeerId.createFromB58String(res.addr.decapsulate('ipfs'));\n          return res;\n        }));\n      }\n\n      // go-ipfs >= 0.4.5\n      callback(null, (result.Peers || []).map(p => {\n        const res = {\n          addr: multiaddr(p.Addr),\n          peer: PeerId.createFromB58String(p.Peer),\n          muxer: p.Muxer\n        };\n        if (p.Latency) {\n          res.latency = p.Latency;\n        }\n        if (p.Streams) {\n          res.streams = p.Streams;\n        }\n        return res;\n      }));\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","multiaddr","PeerId","module","exports","send","opts","callback","verbose","v","path","qs","err","result","Strings","map","p","res","parts","split","addr","latency","peer","createFromB58String","decapsulate","Peers","Addr","Peer","muxer","Muxer","Latency","Streams","streams"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/swarm/peers.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst multiaddr = require('multiaddr')\nconst PeerId = require('peer-id')\n\nmodule.exports = (send) => {\n  return promisify((opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    const verbose = opts.v || opts.verbose\n\n    send({\n      path: 'swarm/peers',\n      qs: opts\n    }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n\n      // go-ipfs <= 0.4.4\n      if (result.Strings) {\n        return callback(null, result.Strings.map((p) => {\n          const res = {}\n\n          if (verbose) {\n            const parts = p.split(' ')\n            res.addr = multiaddr(parts[0])\n            res.latency = parts[1]\n          } else {\n            res.addr = multiaddr(p)\n          }\n\n          res.peer = PeerId.createFromB58String(\n            res.addr.decapsulate('ipfs')\n          )\n\n          return res\n        }))\n      }\n\n      // go-ipfs >= 0.4.5\n      callback(null, (result.Peers || []).map((p) => {\n        const res = {\n          addr: multiaddr(p.Addr),\n          peer: PeerId.createFromB58String(p.Peer),\n          muxer: p.Muxer\n        }\n\n        if (p.Latency) {\n          res.latency = p.Latency\n        }\n\n        if (p.Streams) {\n          res.streams = p.Streams\n        }\n\n        return res\n      }))\n    })\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACtC,MAAME,MAAM,GAAGF,OAAO,CAAC,SAAS,CAAC;AAEjCG,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAON,SAAS,CAAC,CAACO,IAAI,EAAEC,QAAQ,KAAK;IACnC,IAAI,OAAQD,IAAK,KAAK,UAAU,EAAE;MAChCC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IAEA,MAAME,OAAO,GAAGF,IAAI,CAACG,CAAC,IAAIH,IAAI,CAACE,OAAO;IAEtCH,IAAI,CAAC;MACHK,IAAI,EAAE,aAAa;MACnBC,EAAE,EAAEL;IACN,CAAC,EAAE,CAACM,GAAG,EAAEC,MAAM,KAAK;MAClB,IAAID,GAAG,EAAE;QACP,OAAOL,QAAQ,CAACK,GAAG,CAAC;MACtB;;MAEA;MACA,IAAIC,MAAM,CAACC,OAAO,EAAE;QAClB,OAAOP,QAAQ,CAAC,IAAI,EAAEM,MAAM,CAACC,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAK;UAC9C,MAAMC,GAAG,GAAG,CAAC,CAAC;UAEd,IAAIT,OAAO,EAAE;YACX,MAAMU,KAAK,GAAGF,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC;YAC1BF,GAAG,CAACG,IAAI,GAAGnB,SAAS,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9BD,GAAG,CAACI,OAAO,GAAGH,KAAK,CAAC,CAAC,CAAC;UACxB,CAAC,MAAM;YACLD,GAAG,CAACG,IAAI,GAAGnB,SAAS,CAACe,CAAC,CAAC;UACzB;UAEAC,GAAG,CAACK,IAAI,GAAGpB,MAAM,CAACqB,mBAAmB,CACnCN,GAAG,CAACG,IAAI,CAACI,WAAW,CAAC,MAAM,CAAC,CAC7B;UAED,OAAOP,GAAG;QACZ,CAAC,CAAC,CAAC;MACL;;MAEA;MACAV,QAAQ,CAAC,IAAI,EAAE,CAACM,MAAM,CAACY,KAAK,IAAI,EAAE,EAAEV,GAAG,CAAEC,CAAC,IAAK;QAC7C,MAAMC,GAAG,GAAG;UACVG,IAAI,EAAEnB,SAAS,CAACe,CAAC,CAACU,IAAI,CAAC;UACvBJ,IAAI,EAAEpB,MAAM,CAACqB,mBAAmB,CAACP,CAAC,CAACW,IAAI,CAAC;UACxCC,KAAK,EAAEZ,CAAC,CAACa;QACX,CAAC;QAED,IAAIb,CAAC,CAACc,OAAO,EAAE;UACbb,GAAG,CAACI,OAAO,GAAGL,CAAC,CAACc,OAAO;QACzB;QAEA,IAAId,CAAC,CAACe,OAAO,EAAE;UACbd,GAAG,CAACe,OAAO,GAAGhB,CAAC,CAACe,OAAO;QACzB;QAEA,OAAOd,GAAG;MACZ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}