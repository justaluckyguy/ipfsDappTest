{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst parseUrl = require('url').parse;\nconst request = require('../utils/request');\nconst SendOneFile = require('../utils/send-one-file-multiple-results');\nconst FileResultStreamConverter = require('../utils/file-result-stream-converter');\nmodule.exports = send => {\n  const sendOneFile = SendOneFile(send, 'add');\n  return promisify((url, opts, callback) => {\n    if (typeof opts === 'function' && callback === undefined) {\n      callback = opts;\n      opts = {};\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    if (!validUrl(url)) {\n      return callback(new Error('\"url\" param must be an http(s) url'));\n    }\n    requestWithRedirect(url, opts, sendOneFile, callback);\n  });\n};\nconst validUrl = url => typeof url === 'string' && url.startsWith('http');\nconst requestWithRedirect = (url, opts, sendOneFile, callback) => {\n  const parsedUrl = parseUrl(url);\n  const req = request(parsedUrl.protocol)(url, res => {\n    if (res.statusCode >= 400) {\n      return callback(new Error(`Failed to download with ${res.statusCode}`));\n    }\n    const redirection = res.headers.location;\n    if (res.statusCode >= 300 && res.statusCode < 400 && redirection) {\n      if (!validUrl(redirection)) {\n        return callback(new Error('redirection url must be an http(s) url'));\n      }\n      requestWithRedirect(redirection, opts, sendOneFile, callback);\n    } else {\n      const requestOpts = {\n        qs: opts,\n        converter: FileResultStreamConverter\n      };\n      const fileName = decodeURIComponent(parsedUrl.pathname.split('/').pop());\n      sendOneFile({\n        content: res,\n        path: fileName\n      }, requestOpts, callback);\n    }\n  });\n  req.once('error', callback);\n  req.end();\n};","map":{"version":3,"names":["promisify","require","parseUrl","parse","request","SendOneFile","FileResultStreamConverter","module","exports","send","sendOneFile","url","opts","callback","undefined","validUrl","Error","requestWithRedirect","startsWith","parsedUrl","req","protocol","res","statusCode","redirection","headers","location","requestOpts","qs","converter","fileName","decodeURIComponent","pathname","split","pop","content","path","once","end"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/src/util/url-add.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst parseUrl = require('url').parse\nconst request = require('../utils/request')\nconst SendOneFile = require('../utils/send-one-file-multiple-results')\nconst FileResultStreamConverter = require('../utils/file-result-stream-converter')\n\nmodule.exports = (send) => {\n  const sendOneFile = SendOneFile(send, 'add')\n\n  return promisify((url, opts, callback) => {\n    if (typeof (opts) === 'function' &&\n        callback === undefined) {\n      callback = opts\n      opts = {}\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' &&\n        typeof callback === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    if (!validUrl(url)) {\n      return callback(new Error('\"url\" param must be an http(s) url'))\n    }\n\n    requestWithRedirect(url, opts, sendOneFile, callback)\n  })\n}\n\nconst validUrl = (url) => typeof url === 'string' && url.startsWith('http')\n\nconst requestWithRedirect = (url, opts, sendOneFile, callback) => {\n  const parsedUrl = parseUrl(url)\n\n  const req = request(parsedUrl.protocol)(url, (res) => {\n    if (res.statusCode >= 400) {\n      return callback(new Error(`Failed to download with ${res.statusCode}`))\n    }\n\n    const redirection = res.headers.location\n\n    if (res.statusCode >= 300 && res.statusCode < 400 && redirection) {\n      if (!validUrl(redirection)) {\n        return callback(new Error('redirection url must be an http(s) url'))\n      }\n\n      requestWithRedirect(redirection, opts, sendOneFile, callback)\n    } else {\n      const requestOpts = {\n        qs: opts,\n        converter: FileResultStreamConverter\n      }\n      const fileName = decodeURIComponent(parsedUrl.pathname.split('/').pop())\n\n      sendOneFile({\n        content: res,\n        path: fileName\n      }, requestOpts, callback)\n    }\n  })\n\n  req.once('error', callback)\n\n  req.end()\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,KAAK,CAAC,CAACE,KAAK;AACrC,MAAMC,OAAO,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAMI,WAAW,GAAGJ,OAAO,CAAC,yCAAyC,CAAC;AACtE,MAAMK,yBAAyB,GAAGL,OAAO,CAAC,uCAAuC,CAAC;AAElFM,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,MAAMC,WAAW,GAAGL,WAAW,CAACI,IAAI,EAAE,KAAK,CAAC;EAE5C,OAAOT,SAAS,CAAC,CAACW,GAAG,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IACxC,IAAI,OAAQD,IAAK,KAAK,UAAU,IAC5BC,QAAQ,KAAKC,SAAS,EAAE;MAC1BD,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;;IAEA;IACA;IACA,IAAI,OAAOA,IAAI,KAAK,UAAU,IAC1B,OAAOC,QAAQ,KAAK,UAAU,EAAE;MAClCA,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IAEA,IAAI,CAACG,QAAQ,CAACJ,GAAG,CAAC,EAAE;MAClB,OAAOE,QAAQ,CAAC,IAAIG,KAAK,CAAC,oCAAoC,CAAC,CAAC;IAClE;IAEAC,mBAAmB,CAACN,GAAG,EAAEC,IAAI,EAAEF,WAAW,EAAEG,QAAQ,CAAC;EACvD,CAAC,CAAC;AACJ,CAAC;AAED,MAAME,QAAQ,GAAIJ,GAAG,IAAK,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACO,UAAU,CAAC,MAAM,CAAC;AAE3E,MAAMD,mBAAmB,GAAG,CAACN,GAAG,EAAEC,IAAI,EAAEF,WAAW,EAAEG,QAAQ,KAAK;EAChE,MAAMM,SAAS,GAAGjB,QAAQ,CAACS,GAAG,CAAC;EAE/B,MAAMS,GAAG,GAAGhB,OAAO,CAACe,SAAS,CAACE,QAAQ,CAAC,CAACV,GAAG,EAAGW,GAAG,IAAK;IACpD,IAAIA,GAAG,CAACC,UAAU,IAAI,GAAG,EAAE;MACzB,OAAOV,QAAQ,CAAC,IAAIG,KAAK,CAAE,2BAA0BM,GAAG,CAACC,UAAW,EAAC,CAAC,CAAC;IACzE;IAEA,MAAMC,WAAW,GAAGF,GAAG,CAACG,OAAO,CAACC,QAAQ;IAExC,IAAIJ,GAAG,CAACC,UAAU,IAAI,GAAG,IAAID,GAAG,CAACC,UAAU,GAAG,GAAG,IAAIC,WAAW,EAAE;MAChE,IAAI,CAACT,QAAQ,CAACS,WAAW,CAAC,EAAE;QAC1B,OAAOX,QAAQ,CAAC,IAAIG,KAAK,CAAC,wCAAwC,CAAC,CAAC;MACtE;MAEAC,mBAAmB,CAACO,WAAW,EAAEZ,IAAI,EAAEF,WAAW,EAAEG,QAAQ,CAAC;IAC/D,CAAC,MAAM;MACL,MAAMc,WAAW,GAAG;QAClBC,EAAE,EAAEhB,IAAI;QACRiB,SAAS,EAAEvB;MACb,CAAC;MACD,MAAMwB,QAAQ,GAAGC,kBAAkB,CAACZ,SAAS,CAACa,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,CAAC;MAExExB,WAAW,CAAC;QACVyB,OAAO,EAAEb,GAAG;QACZc,IAAI,EAAEN;MACR,CAAC,EAAEH,WAAW,EAAEd,QAAQ,CAAC;IAC3B;EACF,CAAC,CAAC;EAEFO,GAAG,CAACiB,IAAI,CAAC,OAAO,EAAExB,QAAQ,CAAC;EAE3BO,GAAG,CAACkB,GAAG,EAAE;AACX,CAAC"},"metadata":{},"sourceType":"script"}