{"ast":null,"code":"'use strict';\n\nmodule.exports = function base16(alphabet) {\n  return {\n    encode(input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex');\n      }\n      return input.toString('hex');\n    },\n    decode(input) {\n      for (let char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character');\n        }\n      }\n      return Buffer.from(input, 'hex');\n    }\n  };\n};","map":{"version":3,"names":["module","exports","base16","alphabet","encode","input","Buffer","from","toString","decode","char","indexOf","Error"],"sources":["/home/isaak/Workspace/ipfsDapp/client/node_modules/ipfs-api/node_modules/multibase/src/base16.js"],"sourcesContent":["'use strict'\n\nmodule.exports = function base16 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex')\n      }\n      return input.toString('hex')\n    },\n    decode (input) {\n      for (let char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character')\n        }\n      }\n      return Buffer.from(input, 'hex')\n    }\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,MAAM,CAAEC,QAAQ,EAAE;EAC1C,OAAO;IACLC,MAAM,CAAEC,KAAK,EAAE;MACb,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAOC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,QAAQ,CAAC,KAAK,CAAC;MAC3C;MACA,OAAOH,KAAK,CAACG,QAAQ,CAAC,KAAK,CAAC;IAC9B,CAAC;IACDC,MAAM,CAAEJ,KAAK,EAAE;MACb,KAAK,IAAIK,IAAI,IAAIL,KAAK,EAAE;QACtB,IAAIF,QAAQ,CAACQ,OAAO,CAACD,IAAI,CAAC,GAAG,CAAC,EAAE;UAC9B,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;QAC7C;MACF;MACA,OAAON,MAAM,CAACC,IAAI,CAACF,KAAK,EAAE,KAAK,CAAC;IAClC;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}